services:
  api:
    build: .
    env_file:
      - .env
    depends_on:
      database:
       condition: service_healthy
    ports:
      - 3000:3000
    volumes:
      - ./apps/api:/usr/src/apps/api
    working_dir: /usr/src/apps/api
    entrypoint: [  "bash", "-c","chmod +x ./start.sh && ./start.sh" ]

  web:
    build: .
    ports:
      - 8080:8080
    env_file:
      - .env
    volumes:
      - ./apps/web:/usr/src/apps/web
      - ./packages:/usr/src/packages
      - /usr/src/apps/web/node_modules
    working_dir: /usr/src/apps/web
    entrypoint: [ "bash", "-c","chmod +x ./start.sh && ./start.sh" ]

  database:
    image: postgres:16.2-alpine3.19
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-db:/var/lib/postgresql/data
    logging:
      driver: "none"
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 2

volumes:
  postgres-db: